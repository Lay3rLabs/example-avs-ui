/* eslint-disable @typescript-eslint/no-empty-object-type */
/**
 * This file was automatically generated by @cosmwasm/ts-codegen@1.11.1.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export type Requestor =
  | {
      fixed: string;
    }
  | {
      open_payment: Coin;
    };
export type Uint128 = string;
export interface InstantiateMsg {
  requestor: Requestor;
  timeout: TimeoutInfo;
  verifier: string;
}
export interface Coin {
  amount: Uint128;
  denom: string;
}
export interface TimeoutInfo {
  default: number;
  maximum?: number | null;
  minimum?: number | null;
}
export type ExecuteMsg = TaskExecuteMsg | CustomExecuteMsg;
export type TaskExecuteMsg = {
  complete: {
    response: {
      [k: string]: unknown;
    };
    task_id: TaskId;
  };
};
export type TaskId = Uint64;
export type Uint64 = string;
export type CustomExecuteMsg =
  | {
      create: {
        description: string;
        payload: {
          [k: string]: unknown;
        };
        timeout?: number | null;
      };
    }
  | {
      timeout: {
        task_id: TaskId;
      };
    };
export type QueryMsg = TaskQueryMsg | CustomQueryMsg;
export type TaskQueryMsg = {
  task_status: {
    id: TaskId;
  };
};
export type CustomQueryMsg =
  | {
      list_open: {};
    }
  | {
      list_completed: {};
    }
  | {
      task: {
        id: TaskId;
      };
    }
  | {
      config: {};
    };
export interface ConfigResponse {
  requestor: Requestor;
  timeout: TimeoutConfig;
  verifier: string;
}
export interface TimeoutConfig {
  default: number;
  maximum: number;
  minimum: number;
}
export interface ListCompletedResponse {
  tasks: CompletedTaskOverview[];
}
export interface CompletedTaskOverview {
  completed: number;
  id: TaskId;
  result: true;
}
export interface ListOpenResponse {
  tasks: OpenTaskOverview[];
}
export interface OpenTaskOverview {
  expires: number;
  id: TaskId;
  payload: true;
}
export type Status =
  | {
      open: {};
    }
  | {
      completed: {
        completed: number;
      };
    }
  | {
      expired: {};
    };
export interface TaskResponse {
  description: string;
  id: TaskId;
  payload: true;
  result?: true;
  status: Status;
}
export type TaskStatus = "open" | "completed" | "expired";
export interface TaskStatusResponse {
  created_height: number;
  created_time: number;
  expires_time: number;
  id: TaskId;
  status: TaskStatus;
}
